{"meta":{"title":"Pomin's Blog","subtitle":"","description":".......","author":"Pomin","url":"https://pomin.xyz","root":"/"},"pages":[{"title":"","date":"2022-01-26T14:11:35.026Z","updated":"2022-01-26T14:11:35.026Z","comments":true,"path":"categories/index.html","permalink":"https://pomin.xyz/categories/index.html","excerpt":"","text":""},{"title":"","date":"2022-01-26T14:10:54.199Z","updated":"2022-01-26T14:10:54.199Z","comments":true,"path":"tags/index.html","permalink":"https://pomin.xyz/tags/index.html","excerpt":"","text":""},{"title":"页面走丢啦 404！！！","date":"2022-01-27T04:16:14.682Z","updated":"2022-01-27T04:16:14.682Z","comments":false,"path":"/404.html","permalink":"https://pomin.xyz/404.html","excerpt":"","text":""},{"title":"C51","date":"2022-01-28T03:48:34.889Z","updated":"2022-01-28T03:48:34.889Z","comments":true,"path":"categories/c51/index.html","permalink":"https://pomin.xyz/categories/c51/index.html","excerpt":"","text":""},{"title":"about","date":"2021-04-16T06:23:48.000Z","updated":"2021-08-29T15:26:35.098Z","comments":true,"path":"about/index.html","permalink":"https://pomin.xyz/about/index.html","excerpt":"","text":""}],"posts":[{"title":"Welcome to my blog site ~~","slug":"hexo-theme-next","date":"2022-03-01T12:42:13.797Z","updated":"2022-03-01T12:42:13.797Z","comments":true,"path":"2022/03/01/hexo-theme-next/","link":"","permalink":"https://pomin.xyz/2022/03/01/hexo-theme-next/","excerpt":"","text":"一个正在学习的嵌入式的 Maker 📕 I’m currently learning C++ 👓 Welcome to my homepage 📝 CSDN blog my csdn blog 💎 OSHWHub my hardware 🎈 Ask my mail 1637766030@qq.com 📫 How to reach me: qq 1637766030 Languages and Tools: .","categories":[],"tags":[]},{"title":"Markdown 支持 Font Awesome 图标","slug":"markdown-Font Awesome","date":"2022-02-17T08:46:37.941Z","updated":"2022-02-17T08:46:37.941Z","comments":true,"path":"2022/02/17/markdown-font-awesome/","link":"","permalink":"https://pomin.xyz/2022/02/17/markdown-font-awesome/","excerpt":"问题引出：Markdown 编译完为 html 代码，理论上是可以使用 Font Awesome 图标的 🧡Font Awesome 图标 官网地址 https://fontawesome.com/ GitHub首页 https://github.com/FortAwesome/Font-Awesome","text":"问题引出：Markdown 编译完为 html 代码，理论上是可以使用 Font Awesome 图标的 🧡Font Awesome 图标 官网地址 https://fontawesome.com/ GitHub首页 https://github.com/FortAwesome/Font-Awesome 一般导入使用 Font Awesome 的方法 在HTML源码中&lt;head&gt;&lt;/head&gt;标签中添加支持 &lt;head> &lt;script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\">&lt;/script> &lt;script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js\">&lt;/script> &lt;link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\"> &lt;/head> 💙导入到 markdown 中代码&lt;head> &lt;script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\">&lt;/script> &lt;script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/v4-shims.js\">&lt;/script> &lt;link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.13/css/all.css\"> &lt;/head> &lt;h2> &lt;span> &lt;i class=\"fa fa-hand-point-right\">&lt;/i> &lt;i class=\"fa fa-heart\">&lt;/i> &lt;i class=\"fa fa-hand-point-left\">&lt;/i> &lt;/span> &lt;/h2> 效果 呕吼... 💖markdown 编辑插件 VSCode 插件：Font Awesome Auto-complete &amp; Preview 添加到配置文件settings.json &#123; // Font Awesome version to use. \"fontAwesomeAutocomplete.version\": \"5\", // List of glob patterns that determine where Font Awesome 5 Autocomplete will provide suggestions. \"fontAwesomeAutocomplete.patterns\": [ \"**/*.html\", \"**/*.md\" ], // A word that triggers the autocompletion of Font Awesome icons. Last character of the trigger word is also the trigger character for autocompletion menu. \"fontAwesomeAutocomplete.triggerWord\": \"fa-\", // A list of glob patterns for which the extension should NOT auto-remove the trigger word when a font class name is inserted from the autocompletion list. \"fontAwesomeAutocomplete.disableTriggerWordAutoClearPatterns\": [\"**/*.html\", \"**/*.md\"], // Background color of a Font Awesome icon preview. Supports any valid CSS color. \"fontAwesomeAutocomplete.preview.backgroundColor\": \"#ffffff\", // Foreground color of a Font Awesome icon preview. Supports any valid CSS color. \"fontAwesomeAutocomplete.preview.foregroundColor\": \"#000000\", // Allows overriding the inserted text per file type when an autocompletion item is selected. // Available template placeholders are &#123;style&#125;, &#123;styleName&#125;, &#123;name&#125;, and &#123;prefix&#125;. // &#123;name&#125; supports the following formatters: camelCase, kebabCase, pascalCase, and snakeCase. Usage: &#123;name:formatter&#125;, e.g. &#123;name:camelCase&#125; \"fontAwesomeAutocomplete.insertionTemplate\": &#123; \"**/*.html\": \"&#123;style&#125; &#123;prefix&#125;&#123;name&#125;\" &#125;, // Artificially increases the importance of completion items. Enabled by default as FontAwesome Autocomplete extension only provides suggestions based on the triggerWord setting. \"fontAwesomeAutocomplete.enableElevatedSortPriority\": true &#125; 效果 ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"other","slug":"other","permalink":"https://pomin.xyz/categories/other/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://pomin.xyz/tags/markdown/"}]},{"title":"Python 写的一个串口插入监测工具","slug":"python-serial-tipserial","date":"2022-02-13T10:43:09.430Z","updated":"2022-02-13T10:43:09.430Z","comments":true,"path":"2022/02/13/python-serial-tipserial/","link":"","permalink":"https://pomin.xyz/2022/02/13/python-serial-tipserial/","excerpt":"问题引出：每次插一个单片机都要打开设备管理器看一下端口号是 COM几，太麻烦........","text":"问题引出：每次插一个单片机都要打开设备管理器看一下端口号是 COM几，太麻烦........ 💎python 调用的一些库pyserial 库 pyserial 库有扫描当前已连接串口的 API win32com 库 win32com 库有调用微软语音的 API win10toast 库 win10toast 库有实现在 win10 系统上的右下角消息提醒效果 API win32event、win32api 库 win32event 库有创建线程互斥锁的 API 🔊成品演示演示视频 python 代码''' Author: Pomin Date: 2022-02-10 14:51:05 Github: https://github.com/POMIN-163 LastEditTime: 2022-02-10 21:04:09 Description: 后台检测串口设备的插入 ''' import time import os import win32api import win32event import win32com.client import serial.tools.list_ports from win10toast import ToastNotifier # 微软语音 spk = win32com.client.Dispatch(\"SAPI.SpVoice\") # win10 消息提醒 API toaster = ToastNotifier() port_list = list('') port_list_last = list('') list2arr = [] list2arr_last = [] ico_path = os.path.dirname(os.path.abspath(__file__)) + \"\\\\tip.ico\" speak_en = True ''' win10 消息提醒 ''' def my_tip(title_=\"提示\", msg_=\"\"): toaster.show_toast( title=title_, msg=msg_, icon_path=ico_path, duration=3, threaded=True ) ''' 一个数字是否在指定数组中 ''' def is_in_arr(arr, num): try: arr.index(num) except: return False return True ''' 拷贝数组、列表 ''' def copy_arr(arr1, arr2): arr2.clear() for xx in arr1: arr2.append(xx) ''' 刷新数组 ''' def serial2arr(): list2arr.clear() for i in range(0, len(port_list)): if port_list[i].name[:3] == 'COM': list2arr.append(int(port_list[i].name[3:])) # print(port_list[i]) ''' 主函数 ''' if __name__ == '__main__': # 创建互斥锁避免多开 mutex = win32event.CreateMutex(None, False, 'pomin serial toast tools') if win32api.GetLastError() > 0: toaster.show_toast(\"串口插入监测已在运行\", \"小主，我已经在运行了，嗷~~~~\", icon_path=ico_path, duration=5, threaded=False ) exit(1) print('开始运行') my_tip(\"启动了，嗷~~~~\", \"串口插入监测开始运行\") port_list = list(serial.tools.list_ports.comports()) port_list_last = list(serial.tools.list_ports.comports()) serial2arr() copy_arr(list2arr, list2arr_last) while True: time.sleep(0.5) copy_arr(list2arr, list2arr_last) copy_arr(port_list, port_list_last) port_list = list(serial.tools.list_ports.comports()) if len(port_list) != 0: if len(port_list) != len(port_list_last): if len(port_list) > len(port_list_last): print('串口设备插入') serial2arr() for x in list2arr: if not is_in_arr(list2arr_last, x): print(\"add: \" + str(port_list[list2arr.index(x)])) if speak_en: spk.Speak(u\"插入COM\" + str(x)) my_tip(\"串口设备插入\", str(port_list[list2arr.index(x)])) else: print('串口设备拔出') serial2arr() for x in list2arr_last: if not is_in_arr(list2arr, x): print(\"remove: \" + str(port_list_last[list2arr_last.index(x)])) if speak_en: spk.Speak(u\"拔出COM\" + str(x)) my_tip(\"串口设备拔出\", str(port_list_last[list2arr_last.index(x)])) bat 脚本 用 battoexe 工具编译成 exe 文件设置成开机自启。 python %~dp0tipserial.py ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"Python","slug":"Python","permalink":"https://pomin.xyz/categories/Python/"}],"tags":[{"name":"串口工具","slug":"串口工具","permalink":"https://pomin.xyz/tags/%E4%B8%B2%E5%8F%A3%E5%B7%A5%E5%85%B7/"}]},{"title":"正则表达式的神操作","slug":"regex-use","date":"2022-02-13T10:42:42.461Z","updated":"2022-02-08T09:57:48.110Z","comments":true,"path":"2022/02/13/regex-use/","link":"","permalink":"https://pomin.xyz/2022/02/13/regex-use/","excerpt":"🔑密码限制 要求：包含大写、小写字母、数字、长度6-16位","text":"🔑密码限制 要求：包含大写、小写字母、数字、长度6-16位 ^(?![A-Za-z]+$)(?![0-9a-z]+$)(?![0-9A-Z]+$)[0-9A-Za-z]&#123;6,16&#125;$ ^ 匹配开头位置 (?![A-Za-z]+$) 限定后面不全是字母 (?![0-9a-z]+$) 限定后面不全是数字和小写字母 (?![0-9A-Z]+$) 限定后面不全是数字和大写字母 [0-9A-Za-z._ ] 限定由数字、大小写字母组成 &#123;6,16&#125; 限定长度为6-16位 $ 匹配行结尾位置 💡删除注释、空行空行 删除所有空行： ^\\s*\\n 多行连续空行变一行空行： ^\\s*\\n\\s*$ C/C++ 注释行注释 一般： \\&#x2F;\\&#x2F;.* 或 \\&#x2F;\\&#x2F;.*?$ 代码含有有网址等信息： (?&lt;!https:|http:)\\&#x2F;\\&#x2F;.*?$ 块注释&#x2F;\\*[\\w\\W\\n]*?\\*&#x2F; 所有注释\\&#x2F;\\&#x2F;.*?$|&#x2F;\\*[\\w\\W\\n]*?\\*&#x2F; 测试代码 /* * @Author: Pomin * @Date: 2022-01-11 19:38:23 * @Github: https://github.com/POMIN-163 * @LastEditTime: 2022-02-08 16:38:44 * @Description: */ /* safssd */ #include &lt;fstream> using namespace std; int main(int argc, char const* argv[]) &#123; double X[10] = &#123; 0 &#125;; // Data_number代表数据的个数 double Y[10] = &#123; 0 &#125;; ifstream in1, in2; // 从硬盘到内存 in1.open(\"E:\\\\shuju\\\\x2.txt\"); // 在相应的路径中打开txt文件 in2.open(\"E:\\\\shuju\\\\y2.txt\"); for (int i = 0; i &lt; 10; i++) &#123; // 按行读取文件，Data_number表示数据有多少行，一行一个数据 in1 >> X[i]; // cout &lt;&lt; X[i] &lt;&lt; endl; // 可以在此输出数据，检查是否读取成功 &#125; for (int i = 0; i &lt; 10; i++) &#123; // 按行读取文件，Data_number表示数据有多少行，一行一个数据 in2 >> Y[i]; // cout &lt;&lt; Y[i] &lt;&lt; endl; &#125; in1.close(); // 文件关闭 in2.close(); // 文件关闭 return 0; &#125; notepad3 编辑器结果 vscode 编辑器结果 Visual Studio 结果 python 注释行注释#.* 块注释&#39;&#39;&#39;[\\w\\W\\n]*?&#39;&#39;&#39; 所有注释#.*|&#39;&#39;&#39;[\\w\\W\\n]*?&#39;&#39;&#39; MATLAB 注释行注释%[^&#123;&#125;].* 块注释%\\&#123;[\\w\\W\\n]*?%\\&#125; 所有注释%[^&#123;&#125;].*|%\\&#123;[\\w\\W\\n]*?%\\&#125;","categories":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://pomin.xyz/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://pomin.xyz/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}]},{"title":"Linux系统的一些增强工具","slug":"linux-useful-tools","date":"2022-02-13T02:41:34.410Z","updated":"2022-02-13T02:41:34.410Z","comments":true,"path":"2022/02/13/linux-useful-tools/","link":"","permalink":"https://pomin.xyz/2022/02/13/linux-useful-tools/","excerpt":"💿安装sudo apt install mc ncdu htop exa duf proxychains -y","text":"💿安装sudo apt install mc ncdu htop exa duf proxychains -y mc : 文件管理 ncdu : 文件夹大小 du 增强版 htop : 进程监视 top 增强版 exa : 列举文件 ls 增强版 duf : 列举分区 df 增强版 proxychains : 简易代理工具# 改代理设置，最下面一行 sudo nano /etc/proxychains.conf oh-my-zsh : 终端强化神器 安装 # sh 一键安装 sh -c \"$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)\" 拓展 # 自动补全 proxychains git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions # 语法高亮 proxychains git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting # 添加到 ~/.zshrc nano ~/.zshrc 主题 我使用的是 passion: https://github.com/ChesterYue/ohmyzsh-theme-passion 更多主题在: https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes 应用设置 ！！！！ source ~/.zshrc KDE : 桌面环境# 简约版 sudo apt install kde-plasma-desktop # 完整版 # sudo apt install kubuntu-desktop clash —— 代理工具 下载配置文件 # 链接要从相关网站中获取 wget -O config.yaml \"..............\" 直接运行 ( 不推荐 ) ./clash /d . mmdb 文件下载失败时使用 wget 下载 mmdb 文件 wget ****.mmdb 写系统服务文件 clash.service ( 推荐 ) [Unit] Description=clash Documentation=https://............ After=network.target Wants=network.target [Service] WorkingDirectory=/root/app/clash ExecStart=/root/app/clash/clash -d /root/app/clash Restart=on-abnormal RestartSec=5s KillMode=mixed StandardOutput=null StandardError=syslog [Install] WantedBy=multi-user.target 复制到指定目录 cp ./clash.service /etc/systemd/system/clash.service systemctl daemon-reload # 运行 systemctl start clash # 开机自启 systemctl enable clash ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/tags/linux/"}]},{"title":"Linux 赋予用户 root 权限，设置 root 密码","slug":"linux-root_user","date":"2022-02-12T13:34:05.944Z","updated":"2022-02-12T13:34:05.944Z","comments":true,"path":"2022/02/12/linux-root-user/","link":"","permalink":"https://pomin.xyz/2022/02/12/linux-root-user/","excerpt":"问题引出：天大寒，砚冰坚，手指不可屈伸，大冷天的懒得输sudo的密码。。。 🎈赋予用户 root 权限查看用户名whoami","text":"问题引出：天大寒，砚冰坚，手指不可屈伸，大冷天的懒得输sudo的密码。。。 🎈赋予用户 root 权限查看用户名whoami 改写入权限千万不要使用 sudo chmod 777 /etc/sudoers 否则会触发linux的保护而报错：sudo: /etc/sudoers is world writable 正确方法： sudo chmod u+w /etc/sudoers 编辑 /etc/sudoerssudo vim /etc/sudoers 在 root 的下方写入 [用户名] ALL=(ALL:ALL) ALL 免密码登陆的话使用 [用户名] ALL=(ALL:ALL) NOPASSWD:ALL 关闭写入权限sudo chmod u-w /etc/sudoers 附:改写 root 密码sudo passwd root ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/tags/linux/"}]},{"title":"Python2.7 安装 pip","slug":"python-pip_for_python2","date":"2022-02-12T13:32:10.191Z","updated":"2022-02-12T13:32:10.191Z","comments":true,"path":"2022/02/12/python-pip-for-python2/","link":"","permalink":"https://pomin.xyz/2022/02/12/python-pip-for-python2/","excerpt":"","text":"问题引出：部分 linux 系统默认安装 python2.7 可能不带 pip 包管理器 pip (python3) 安装方式 python3 一般自带有 pip # 下载脚本 wget https://bootstrap.pypa.io/get-pip.py # 安装 python get-pip.py --force-reinstall pip (python2) 安装方式wget --no-check-certificate https://bootstrap.pypa.io/ez_setup.py python ez_setup.py --insecure # 下载脚本 wget https://pypi.python.org/packages/11/b6/abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447/pip-9.0.1.tar.gz#md5=35f01da33009719497f01a4ba69d63c9 # 解压 tar -xvf *.tar.gz # 进入目录 cd pip* # 安装 python setup.py install ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"Python","slug":"Python","permalink":"https://pomin.xyz/categories/Python/"}],"tags":[{"name":"Python","slug":"Python","permalink":"https://pomin.xyz/tags/Python/"}]},{"title":"WSL2安装出现Error:0x80370102 ???????????????????","slug":"wsl-wsl2_install","date":"2022-02-12T12:19:43.168Z","updated":"2022-02-12T12:19:43.168Z","comments":true,"path":"2022/02/12/wsl-wsl2-install/","link":"","permalink":"https://pomin.xyz/2022/02/12/wsl-wsl2-install/","excerpt":"问题发现：WSL2设置默认安装版本为 2，WSL 安装时出现 Error: 0x80370102 ???????????????????","text":"问题发现：WSL2设置默认安装版本为 2，WSL 安装时出现 Error: 0x80370102 ??????????????????? 🔑查错 已经启动虚拟机平台 系统是 Win10 家庭版， hyper-V 家庭版上该功能不可见 执行 bcdedit &#x2F;set hypervisorlaunchtype auto start wsl --set-version Debian 2 wsl --set-default-version 2 问题解决 ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"Linux","slug":"Linux","permalink":"https://pomin.xyz/categories/Linux/"}],"tags":[{"name":"WSL","slug":"WSL","permalink":"https://pomin.xyz/tags/WSL/"}]},{"title":"CMake 学习","slug":"cmake-learn","date":"2022-02-11T05:31:49.723Z","updated":"2022-02-11T05:31:49.723Z","comments":true,"path":"2022/02/11/cmake-learn/","link":"","permalink":"https://pomin.xyz/2022/02/11/cmake-learn/","excerpt":"CMake 是一个开源、跨平台的工具系列，旨在构建、测试和打包软件。 📕CMake 基本语法输出信息message(\"hello cmake\") 变量set(name \"pomin\") message(\"My name is $&#123;name&#125;!\")","text":"CMake 是一个开源、跨平台的工具系列，旨在构建、测试和打包软件。 📕CMake 基本语法输出信息message(\"hello cmake\") 变量set(name \"pomin\") message(\"My name is $&#123;name&#125;!\") 操作符 这些操作符一般使用大写 逻辑运算 # 逻辑真：ON , 1, YES, TRUE, Y # 逻辑假：OFF, 0, NO, FALSE, N, NOTFOUND, IGNORER # 直接判断，非空值，0，FALSE，OFF 或者 NOTFOUND即为 true if (var) # 逻辑非 if (NOT var) # 逻辑与 if (var1 AND var2) # 逻辑或 if (var1 OR var2) 前置运算符 # 当 cmd_name 是可调用的命令时为 true if (COMMAND cmd_name) # 当 var 已经被设置了值时为 true if (DEFINED var) # 当指定的文件或者目录存在时为 true if (EXISTS file_or_dir_name) # 当 name 是目录或者是绝对路径时为 true if (IS_DIRECTORY name) if (IS_ABSOLUTE name) 比较运算 # 大于 if (var1 GREATER var2) # 等于 if (var1 EQUAL var2) # 小于 if (var1 LESS var2) # 字符串比较 # STRLESS, STREQUAL 和 STRGREATER # 版本比较 # VERSION_LESS, VERSION_EQUAL 和 VERSION_GREATER # 当 file_1 文件的修改时间比 file_2 文件的修改时间要新时为 true if (file_1 IS_NEWER_THAN file_2) # 正则表达式支持，当给定的内容与给定的正则表达式相匹配时为 true if (str MATCHES regex) 次序: () &gt; 前置运算符 &gt; 比较运算 &gt; NOT &gt; AND / OR ifset(str \"x86\") if(str MATCHES \"x86\") message(\"str is x86\") else() message(\"str is arm\") endif() whileset(num \"1\") while($&#123;num&#125; LESS \"5\") message(\"num : $&#123;num&#125;\") math(EXPR num \"$&#123;num&#125; + 1\") endwhile() foreachforeach(i RANGE 1 5) message(\"i : $&#123;i&#125;\") endforeach() 宏 宏，其中声明的变量为全局变量，宏外可以使用 macro(print str) message($&#123;str&#125;) endmacro() print(\"hello macro\") 函数 函数，其中声明的变量为局部变量，函数外不可使用 function(printf str) message($&#123;str&#125;) endfunction() printf(\"hello function\") 🧨CMake 环境配置命令文件类型CMakeLists.txt 文件有两种：工程文件和脚本文件 工程文件：放在工程根目录的 CMakeLists.txt，使用 project() 指定工程信息的 脚本文件：放在工程的子目录，编译工程所需的链接库等，可以使用 -P 命令使用直译模式。 cmake版本cmake_minimum_required(VERSION 3.0.0) 工程配置 工程名 project(hello) 添加工程子目录 子目录中也含有 CMakeLists.txt 脚本 add_subdirectory(lib) 添加文件 添加头文件路径 include_directories(inc) 添加源文件路径 # 查找当前目录下的所有源文件并将名称保存到 CUR_DIR_SRCS 变量中 aux_source_directory(. ROOT_DIR_SRCS) # 查找src目录下的所有源文件并将名称保存到 SRC_DIR_SRCS 变量中 aux_source_directory(src SRC_DIR_SRCS) 可以用 CMAKE_MODULE_PATH 来指定外部的包含目录 set (CMAKE_MODULE_PATH /usr/include) find_path (MODULE_INCLUDE_DIR header.h path1 path2) find_library (MODULE_LIBRARY library path1 path2) find_package (MODULE_PACKAGE ....) 编译配置 库文件输出 # 从一组源文件中编译出一个库文件并命名 # 静态库 add_library(out_name $&#123;DIR_SRCS&#125;) # 动态库 add_library(out_name SHARED $&#123;DIR_SRCS&#125;) 可执行文件输出 # 从 SRC_DIR_SRCS 与 ROOT_DIR_SRCS 中编译出可执行文件 hello add_executable(hello $&#123;SRC_DIR_SRCS&#125; $&#123;ROOT_DIR_SRCS&#125; ) 添加链接库 # 放在 add_executable(...) 之后 target_link_libraries(hello hello_lib) 组合变量 PROJECT_SOURCE_DIR 工程根目录 CMAKE_BUILD_TYPE None: 编译器默认值 Debug: 产生除错信息 Release: 进行最佳化 RelWithDebInfo: 进行最佳化，但仍然会启用 DEBUG flag MinSizeRel: 进行程式码最小化 CMAKE_C_FLAGS C 编译器的编译选项 CMAKE_CXX_FLAGS C++ 编译器的编译选项 🔅常用命令行cmake -P CMakeLists.txt # 直译模式 cmake -Da&#x3D;99 -Db&#x3D;99 # 指定变量值 cmake -DCMAKE_BUILD_TYPE&#x3D;Debug # 设置开发模式为 Debug 模式 cmake --help-command-list # 查看所有cmake命令 cmake --help-command message # 查看具体某个命令说明 💨示例工程目录结构. ├── CMakeLists.txt ├── inc │ └── hello.h ├── lib │ ├── CMakeLists.txt │ ├── hello_lib.c │ └── hello_lib.h ├── main.c └── src └── hello.c 工程根目录 CMakeLists.txt # cmake版本要求 cmake_minimum_required(VERSION 3.0.0) # 工程名字 project(hello) # 添加头文件路径 include_directories(inc) # 查找当前目录下的所有源文件并将名称保存到 CUR_DIR_SRCS 变量中 aux_source_directory(. ROOT_DIR_SRCS) # 查找src目录下的所有源文件并将名称保存到 SRC_DIR_SRCS 变量中 aux_source_directory(src SRC_DIR_SRCS) # 添加库路径 add_subdirectory(lib) # 从 SRC_DIR_SRCS 与 ROOT_DIR_SRCS 中编译出可执行文件 hello add_executable(hello $&#123;SRC_DIR_SRCS&#125; $&#123;ROOT_DIR_SRCS&#125; ) # 添加链接库 target_link_libraries(hello hello_lib) 工程根目录 main.c #include \"./inc/hello.h\" #include \"./lib/hello_lib.h\" int main(int argc, char const* argv[]) &#123; hello(); hello_lib(); return 0; &#125; inc 目录 hello.h 与 src 目录 hello.c #ifndef _HELLO_H #define _HELLO_H #include &lt;stdio.h> int hello(void); #endif // _HELLO_H #include \"hello.h\" int hello(void) &#123; printf(\"Hello\\n\"); return 0; &#125; lib 目录 CMakeLists.txt # 查找lib目录下的所有源文件并将名称保存到 LIB_DIR_SRCS 变量中 aux_source_directory(. LIB_DIR_SRCS) # 编译lib目录为静态库 # add_library(hello_lib $&#123;LIB_DIR_SRCS&#125;) # 动态库 add_library(hello_lib SHARED $&#123;LIB_DIR_SRCS&#125;) lib 目录 hello_lib.h 与 hello_lib.c #ifndef _HELLO_LIB_H #define _HELLO_LIB_H #include &lt;stdio.h> int hello_lib(void); #endif // _HELLO_H #include \"hello_lib.h\" int hello_lib(void) &#123; printf(\"Hello lib\\n\"); return 0; &#125; 编译结果 ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"CMake","slug":"CMake","permalink":"https://pomin.xyz/categories/CMake/"}],"tags":[{"name":"CMake","slug":"CMake","permalink":"https://pomin.xyz/tags/CMake/"}]},{"title":"批处理脚本的运行目录跳转注意","slug":"bat-workdir","date":"2022-02-09T03:42:31.311Z","updated":"2022-02-09T03:42:31.311Z","comments":true,"path":"2022/02/09/bat-workdir/","link":"","permalink":"https://pomin.xyz/2022/02/09/bat-workdir/","excerpt":"问题引出：批处理脚本不能像powershell一样直接cd到不同盘符的任意位置","text":"问题引出：批处理脚本不能像powershell一样直接cd到不同盘符的任意位置 🔧批处理的一些扩展符号 符号 作用 %~0 删除路径中的引号 %~f0 将 %0 扩展到一个完全合格的路径名 %~d0 将 %0 扩展到一个驱动器号 %~p0 将 %0 扩展到一个路径 %~n0 将 %0 扩展到一个文件名 %~x0 将 %0 扩展到一个文件扩展名 %~s0 将 %0 扩展的路径只含有短名 %~a0 将 %0 扩展到文件的文件属性 %~t0 将 %0 扩展到文件的日期/时间 %~z0 将 %0 扩展到文件的大小 传入参数test.bat arg1 arg2 arg3 :: 其中 %0 指文件的绝对路径 %1 %2...指的是传入参数 示例代码@echo off rem 1.获取批处理自身的完整路径 echo %0 rem 2.获取批处理自身的完整路径，并去掉首尾的引号 echo %~0 rem 3.获取批处理自身的文件名和后缀名 echo %~nx0 rem 4.获取批处理自身的文件名 echo %~n0 rem 5.获取批处理自身的后缀名 echo %~x0 rem 6.获取批处理自身的完整路径，不含文件名 echo %~dp0 rem 7.获取批处理自身的盘符 echo %~d0 rem 8.获取批处理自身的大小 echo %~z0 rem 9.获取批处理自身的修改时间 echo %~t0 rem 上面的字母可以组合获得其他效果，例如 %~dpn0 为不含扩展名的文件路径 pause 切换到不同盘符运行可以使用 %~d1 &amp;&amp; cd %1 和 cd /d %1 来切换到 %1 入参指定的路径运行 @echo off echo 一键清除目录 keil mdk 编译垃圾 if exist &quot;%1&quot; ( echo 指定目录 %1 :: %~d1 :: cd %1 :: 上面两句和下面的这句效果一样 cd &#x2F;d %1 del *.bak &#x2F;s del *.lst &#x2F;s del *.obj &#x2F;s del *.o &#x2F;s del *.d &#x2F;s ) else ( echo 未找到目录 )","categories":[{"name":"批处理脚本","slug":"批处理脚本","permalink":"https://pomin.xyz/categories/%E6%89%B9%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/"}],"tags":[{"name":"批处理脚本","slug":"批处理脚本","permalink":"https://pomin.xyz/tags/%E6%89%B9%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/"}]},{"title":"正则表达式学习","slug":"regex-learn","date":"2022-02-08T09:16:17.014Z","updated":"2022-02-08T09:16:17.014Z","comments":true,"path":"2022/02/08/regex-learn/","link":"","permalink":"https://pomin.xyz/2022/02/08/regex-learn/","excerpt":"正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。 💎基本语法基本匹配基本匹配和一般搜索基本相同，区别大小写！！","text":"正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。 💎基本语法基本匹配基本匹配和一般搜索基本相同，区别大小写！！ 元字符 元字符 描述 . 匹配任意单个字符除了换行符。 [ ] 字符种类。匹配方括号内的任意字符。 [^ ] 否定的字符种类。匹配除了方括号里的任意字符 * 匹配&gt;=0个重复的在*号之前的字符。 + 匹配&gt;=1个重复的+号前的字符。 ? 标记?之前的字符为可选. {n,m} 匹配num个大括号之前的字符或字符集 (n &lt;= num &lt;= m). (xyz) 字符集，匹配与 xyz 完全相等的字符串. | 或运算符，匹配符号前或后的字符. \\ 转义字符,用于匹配一些保留的字符 [ ] ( ) &#123; &#125; . * + ? ^ $ \\ &#124; ^ 从开始行开始匹配. $ 从末端开始匹配. 运算符 . 匹配任意单个字符除了换行符 .r匹配pr和or 运算符 [] 匹配方括号内的任一字符 [a-z]、[A-C]、[0-9]、[a-z0-9]等表达式可以用来指定字母或数字的范围，常用于匹配、区分大小写、区分字母与数字。 [iI]n[tT]匹配int、inT、InT 运算符 [^] 匹配非方括号内的任一字符 [^I]n[^t]排除int和InT 运算符 * 匹配&gt;=0个重复的在*号之前的字符，常用.*匹配一段字符 #.*匹配 python 代码注释 运算符 + 匹配&gt;=1个重复的+号前的字符，常用.+匹配至少一个字符的字符串 ha.+ha匹配ha和ha中间至少一个字符的字符串 运算符 ? 标记?之前的字符为可选（紧跟的字符） h[ae]?匹配时[ae]为可选，即匹配h和h[ae] 运算符 &#123;n,m&#125; 匹配num个大括号之前的字符或字符集 (n &lt;= num &lt;= m)，单参数{num}时相当于{num,num}，{num,}时相当于至少num个 匹配三位数且两边不是数字 匹配多于两位数的数字 运算符 (xyz) 特征标群，(xyz)中的字符集划定为一个整体 (ab)+hello匹配hello结尾前面紧接着ab的字符串 运算符 | 或运算符，匹配符号前或后的字符 print|hello匹配print或hello 运算符 \\ 转义字符,用于匹配一些保留的字符 [ ] ( ) &#123; &#125; . * + ? ^ $ \\ &#124; 运算符 ^ 从一行起始开始匹配，^放在字符集前 ^(print)匹配一行起始的print 运算符 $ 从一行末端开始匹配，$放在字符集后 (123456)$匹配一行末尾的123456 运算符^和$根据正则表达式环境而定，部分环境为全文的起始和末端开始匹配。 📍字符集简写 简写 描述 . 除换行符外的所有字符 \\w 匹配所有字母数字，等同于 [a-zA-Z0-9_] \\W 匹配所有非字母数字，即符号，等同于： [^\\w] \\d 匹配数字： [0-9] \\D 匹配非数字： [^\\d] \\s 匹配所有空格字符，等同于： [\\t\\n\\f\\r\\p&#123;Z&#125;] \\S 匹配所有非空格字符： [^\\s] \\f 匹配一个换页符 \\n 匹配一个换行符 \\r 匹配一个回车符 \\t 匹配一个制表符 \\v 匹配一个垂直制表符 \\p 匹配 CR/LF（等同于 \\r\\n），用来匹配 DOS 行终止符 🔎零宽度断言（前后预查） 符号 描述 ?= 正先行断言-存在 ?! 负先行断言-排除 ?&lt;= 正后发断言-存在 ?&lt;! 负后发断言-排除 简单来说，就是通过这些断言符号来强调两个字符串的关系，常用于密码复杂度验证，假设有两个字符串aaa和bbb 断言式 结果 aaa(?=bbb) 强调aaa后面紧跟着bbb aaa(?!bbb) 强调aaa后面不跟着bbb aaa(?&lt;=bbb) 强调bbb前面紧跟着aaa aaa(?&lt;!bbb) 强调bbb前面不跟着aaa 📌贪婪匹配与惰性匹配 正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长 的子串。我们可以使用 ? 将贪婪匹配模式转化为惰性匹配模式。 贪婪匹配 惰性匹配 ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://pomin.xyz/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}],"tags":[{"name":"正则表达式","slug":"正则表达式","permalink":"https://pomin.xyz/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"}]},{"title":"Linux系统启动修复工具——boot-repair","slug":"boot-repair","date":"2022-02-05T10:46:04.046Z","updated":"2022-01-29T09:19:23.702Z","comments":true,"path":"2022/02/05/boot-repair/","link":"","permalink":"https://pomin.xyz/2022/02/05/boot-repair/","excerpt":"","text":"找一个有相同系统的启动盘Ventoy2Disk做启动盘真香！！ 进入Ubuntu的体验模式📀添加安装源sudo add-apt-repository ppa:yannubuntu&#x2F;boot-repair sudo apt-get update 💿安装boot-repairsudo apt-get install -y boot-repair 修复sudo boot-repair 中途可能会出现报错，只需按提示运行提示的指令即可 ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/categories/linux/"}],"tags":[{"name":"linux常见问题","slug":"linux常见问题","permalink":"https://pomin.xyz/tags/linux%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"}]},{"title":"搭建一个 MQTT 服务器","slug":"MQTT-server","date":"2022-01-28T04:15:33.265Z","updated":"2022-01-28T04:15:33.265Z","comments":true,"path":"2022/01/28/mqtt-server/","link":"","permalink":"https://pomin.xyz/2022/01/28/mqtt-server/","excerpt":"💎OS版本","text":"💎OS版本 💿安装 emqxhttps://www.emqx.com/zh/products/emqx sh 脚本安装 🔑配置开放端口 配置开放端口 (1883 8083 8084 18083) 配置 腾讯云、阿里云等安全策略来开放端口 如果安装了宝塔面板或服务器规则，要设置端口的放行 🔨启动 emqxsudo emqx start 使用 emqx 自带的 Websocket 测试 MQTTX客户端 服务器端 📡申请域名和 ssl 证书万网申请域名https://wanwang.aliyun.com/ 下载 ssl 证书到本地 上传证书到服务器 改写配置文件sudo nano &#x2F;etc&#x2F;emqx&#x2F;emqx.conf # Ctrl+W 搜索 key.pem、cert.pem 改成 **.key、**.pem # **.key 和 **.pem 是下载下来的 ssl 证书中的两个文件 测试 wss 连接 ⚡⚡⚡ OVER ⚡⚡⚡","categories":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/categories/linux/"},{"name":"server","slug":"linux/server","permalink":"https://pomin.xyz/categories/linux/server/"}],"tags":[{"name":"MQTT","slug":"MQTT","permalink":"https://pomin.xyz/tags/MQTT/"},{"name":"server","slug":"server","permalink":"https://pomin.xyz/tags/server/"}]},{"title":"学习next主题的拓展用法","slug":"next-plugins","date":"2022-01-28T03:51:58.835Z","updated":"2022-01-28T03:51:58.835Z","comments":true,"path":"2022/01/28/next-plugins/","link":"","permalink":"https://pomin.xyz/2022/01/28/next-plugins/","excerpt":"按钮&#123;% button 地址, 文字, 图标 [额外效果], [悬浮提示]] %&#125; &#123;% btn 地址, 文字, 图标 [额外效果], [悬浮提示] %&#125; &#123;% button http:&#x2F;&#x2F;baidu.com, 百度 %&#125; &#123;% btn #, 按钮 %&#125; 百度 按钮","text":"按钮&#123;% button 地址, 文字, 图标 [额外效果], [悬浮提示]] %&#125; &#123;% btn 地址, 文字, 图标 [额外效果], [悬浮提示] %&#125; &#123;% button http:&#x2F;&#x2F;baidu.com, 百度 %&#125; &#123;% btn #, 按钮 %&#125; 百度 按钮 &#123;% btn #, 带悬浮提示按钮,, 提示 %&#125; 带悬浮提示按钮 &#123;% btn #,, home %&#125; &#123;% btn #, 有字有图标有提示按钮, home fa-fw, 提示 %&#125; 有字有图标有提示按钮 &#123;% btn #, 🚗, home fa-5x %&#125; &#123;% btn #, 🚗, home fa-4x %&#125; &#123;% btn #, 🚗, home fa-3x %&#125; &#123;% btn #, 🚗, home fa-2x %&#125; &#123;% btn #, 🚗, home fa-lg %&#125; &#123;% btn #, 🚗, home %&#125; 🚗 🚗 🚗 🚗 🚗 🚗 &lt;div class&#x3D;&quot;text-center&quot;&gt;&lt;div&gt;&#123;% btn #,, heading %&#125;&#123;% btn #,, fab fa-edge %&#125;&#123;% btn #,, times %&#125;&#123;% btn #,, circle-notch %&#125;&lt;&#x2F;div&gt; &lt;div&gt;&#123;% btn #,, italic %&#125;&#123;% btn #,, fab fa-scribd %&#125;&lt;&#x2F;div&gt; &lt;&#x2F;div&gt; &lt;div class&#x3D;&quot;text-center&quot;&gt;&#123;% btn #, 上一章, arrow-left fa-fw fa-lg, 上一章 (Full Image) %&#125; &#123;% btn #, 下一章, arrow-right fa-fw fa-lg, 下一章 (Label) %&#125;&lt;&#x2F;div&gt; 上一章 下一章 &lt;div class&#x3D;&quot;text-center&quot;&gt;&#123;% btn https:&#x2F;&#x2F;github.com, GitHub, fab fa-github fa-fw fa-lg, GitHub %&#125;&lt;&#x2F;div&gt; GitHub 图片组对照示意图即可 &#123;% grouppicture 3-3 %&#125; ![](&#x2F;images&#x2F;next.svg) ![](&#x2F;images&#x2F;next.svg) ![](&#x2F;images&#x2F;next.svg) &#123;% endgrouppicture %&#125; &#123;% gp 5-2 %&#125; ![](&#x2F;images&#x2F;next.svg) ![](&#x2F;images&#x2F;next.svg) ![](&#x2F;images&#x2F;next.svg) ![](&#x2F;images&#x2F;next.svg) ![](&#x2F;images&#x2F;next.svg) &#123;% endgp %&#125; 中心引用&#123;% centerquote %&#125;引用的内容&#123;% endcenterquote %&#125; &#123;% cq %&#125;天大寒，砚冰坚，手指不可屈伸&#123;% endcq %&#125; 天大寒，砚冰坚，手指不可屈伸 视频&#123;% video 地址 %&#125; &#123;% video https:&#x2F;&#x2F;threejs.org&#x2F;examples&#x2F;textures&#x2F;sintel.ogv %&#125; 彩色标签&#123;% label info@info %&#125; &lt;br&gt; &#123;% label danger@danger %&#125; &lt;br&gt; &#123;% label default@default %&#125; &lt;br&gt; &#123;% label primary@primary %&#125; &lt;br&gt; &#123;% label success@success %&#125; &lt;br&gt; &#123;% label warning@warning %&#125; info danger default primary success warning 链接栅格&#123;% linkgrid [图片] [标题] [内容] %&#125;&#123;% endlinkgrid %&#125; &#123;% lg [图片] [标题] [内容] %&#125;&#123;% endlg %&#125; &#123;% lg %&#125; pomin | https:&#x2F;&#x2F;github.com&#x2F;pomin-163 | ...... | &#x2F;images&#x2F;m.png &#123;% endlg %&#125; pomin...... PDF&#123;% pdf 地址 [高度] %&#125; &#123;% pdf &#x2F;pdf&#x2F;0.pdf 300px %&#125; 标签&#123;% tabs 唯一标识符, [标签个数] %&#125; &lt;!-- tab [标签标题] [@图标] --&gt; 内容 &lt;!-- endtab --&gt; &#123;% endtabs %&#125; &#123;% tabs Tags %&#125; &lt;!-- tab --&gt; **This is Tab 1.** 1. One 2. Two 3. Three Indented code block: nano &#x2F;etc Tagged code block: &#123;% code %&#125; code tag code tag code tag &#123;% endcode %&#125; &#123;% note default %&#125; Note default tag. &#123;% endnote %&#125; &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 2.** * Five * Six * Seven &#123;% note primary %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Tab 3.** &#123;% subtabs Sub Tabs %&#125; &lt;!-- tab --&gt; **This is Sub Tab 1.** &#123;% note success %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% note warning %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Sub Tab 2.** &#123;% note success %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% note danger %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; &#123;% endnote %&#125; &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Sub Tab 3.** &#123;% subtabs Sub-Sub Tabs %&#125; &lt;!-- tab --&gt; **This is Sub-Sub Tab 1 of Sub Tab 3.** &#123;% note success %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Sub-Sub Tab 2 of Sub Tab 3.** &#123;% note success %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% note warning %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; &#123;% endnote %&#125; &lt;!-- endtab --&gt; &lt;!-- tab --&gt; **This is Sub-Sub Tab 3 of Sub Tab 3.** &#123;% note success %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% note warning %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% note danger %&#125; 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 &#123;% endnote %&#125; &#123;% endnote %&#125; &#123;% endnote %&#125; &lt;!-- endtab --&gt; &#123;% endsubtabs %&#125; &lt;!-- endtab --&gt; &#123;% endsubtabs %&#125; &lt;!-- endtab --&gt; &#123;% endtabs %&#125; Tags 1Tags 2Tags 3This is Tab 1. One Two Three Indented code block: nano /etc Tagged code block: code tag code tag code tag Note default tag. This is Tab 2. Five Six Seven 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 This is Tab 3. Sub Tabs 1Sub Tabs 2Sub Tabs 3This is Sub Tab 1. 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 This is Sub Tab 2. 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 This is Sub Tab 3. Sub-Sub Tabs 1Sub-Sub Tabs 2Sub-Sub Tabs 3This is Sub-Sub Tab 1 of Sub Tab 3. 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 This is Sub-Sub Tab 2 of Sub Tab 3. 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 This is Sub-Sub Tab 3 of Sub Tab 3. 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 哈哈哈哈哈哈哈哈哈哈哈哈哈哈 图表具体要阅读文档：https://github.com/mermaid-js/mermaid &#123;% mermaid type %&#125; &#123;% endmermaid %&#125; &#123;% mermaid graph TD %&#125; A[Hard] --&gt;|Text| B(Round) B --&gt; C&#123;Decision&#125; C --&gt;|One| D[Result 1] C --&gt;|Two| E[Result 2] &#123;% endmermaid %&#125; graph TD A[Hard] --&gt;|Text| B(Round) B --&gt; C{Decision} C --&gt;|One| D[Result 1] C --&gt;|Two| E[Result 2] &#123;% mermaid sequenceDiagram %&#125; Alice-&gt;&gt;John: Hello John, how are you? loop Healthcheck John-&gt;&gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--&gt;&gt;Alice: Great! John-&gt;&gt;Bob: How about you? Bob--&gt;&gt;John: Jolly good! &#123;% endmermaid %&#125; sequenceDiagram Alice-&gt;&gt;John: Hello John, how are you? loop Healthcheck John-&gt;&gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--&gt;&gt;Alice: Great! John-&gt;&gt;Bob: How about you? Bob--&gt;&gt;John: Jolly good! &#123;% mermaid gantt %&#125; dateFormat YYYY-MM-DD section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d &#123;% endmermaid %&#125; gantt dateFormat YYYY-MM-DD section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d &#123;% mermaid classDiagram %&#125; Class01 &lt;|-- AveryLongClass : Cool &lt;&lt;interface&gt;&gt; Class01 Class09 --&gt; C2 : Where am i? Class09 --* C3 Class09 --|&gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 &#123; &lt;&lt;service&gt;&gt; int id size() &#125; &#123;% endmermaid %&#125; classDiagram Class01 &lt;|-- AveryLongClass : Cool &lt;&lt;interface&gt;&gt; Class01 Class09 --&gt; C2 : Where am i? Class09 --* C3 Class09 --|&gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { &lt;&lt;service&gt;&gt; int id size() } &#123;% mermaid stateDiagram %&#125; [*] --&gt; Still Still --&gt; [*] Still --&gt; Moving Moving --&gt; Still Moving --&gt; Crash Crash --&gt; [*] &#123;% endmermaid %&#125; stateDiagram [*] --&gt; Still Still --&gt; [*] Still --&gt; Moving Moving --&gt; Still Moving --&gt; Crash Crash --&gt; [*] &#123;% mermaid pie %&#125; &quot;Dogs&quot; : 386 &quot;Cats&quot; : 85 &quot;Rats&quot; : 15 &#123;% endmermaid %&#125; pie &quot;Dogs&quot; : 386 &quot;Cats&quot; : 85 &quot;Rats&quot; : 15 &#123;% mermaid journey %&#125; title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me &#123;% endmermaid %&#125; journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 3: Me 批注&#123;% note [主题] [no-icon] [折叠后内容] %&#125; 内容 &#123;% endnote %&#125; 主题包含：default | primary | success | info | warning | danger. &#123;% note %&#125; 没有主题的批注 &#123;% endnote %&#125; 没有主题的批注 &#123;% note default %&#125; #### 默认主题 ...... &#123;% endnote %&#125; &#123;% note primary %&#125; #### Primary主题 ...... &#123;% endnote %&#125; &#123;% note info %&#125; #### Info主题 ...... &#123;% endnote %&#125; &#123;% note success %&#125; #### Success主题 ...... &#123;% endnote %&#125; &#123;% note warning %&#125; #### Warning主题 ...... &#123;% endnote %&#125; &#123;% note danger %&#125; #### Danger主题 ...... &#123;% endnote %&#125; 默认主题...... Primary主题...... Info主题...... Success主题...... Warning主题...... Danger主题...... &#123;% note info no-icon %&#125; #### 没有图标的批注 ...... &#123;% endnote %&#125; 没有图标的批注...... &#123;% note primary 这是折叠的内容 %&#125; #### 被折叠隐藏的内容 ...... &#123;% endnote %&#125; 这是折叠的内容 被折叠隐藏的内容...... &#123;% note success %&#125; #### 代码块批注 &#123;% code %&#125; console.log(&#39;hello world&#39;); &#123;% endcode %&#125; &#123;% endnote %&#125; 代码块批注console.log('hello world'); #### 表格批注 &#123;% note default %&#125; | 1 | 2 | | - | - | | 3 | 4 | | 5 | 6 | | 7 | 8 | &#123;% endnote %&#125; 表格批注 1 2 3 4 5 6 7 8","categories":[{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/categories/linux/"},{"name":"server","slug":"linux/server","permalink":"https://pomin.xyz/categories/linux/server/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://pomin.xyz/tags/markdown/"}]},{"title":"学习markdown的基本用法","slug":"markdown-learn","date":"2022-01-27T12:50:41.228Z","updated":"2022-01-27T12:50:41.228Z","comments":true,"path":"2022/01/27/markdown-learn/","link":"","permalink":"https://pomin.xyz/2022/01/27/markdown-learn/","excerpt":"注释[...]: 我是注释 &lt;!-- 我是HTML格式的注释 --> 代码块print(\"hello world\") console.log('hello world');","text":"注释[...]: 我是注释 &lt;!-- 我是HTML格式的注释 --> 代码块print(\"hello world\") console.log('hello world'); 标题# 标题 ## 二级标题 ### 三级标题 #### 四级标题 二级标题三级标题四级标题 强调价值一个亿的代码：`print('hello')` *斜体* | _斜体_ **粗体 偶数倍被包括** ***斜体+粗体 奇数倍被包括*** ~~删除线~~ 价值一个亿的代码：print(&#39;hello&#39;) 斜体 | 斜体 粗体 偶数倍被包括 斜体+粗体 奇数倍被包括 删除线 转义字符转义字符包括：\\\\ \\&#96; \\* \\_ \\&#123; \\&#125; \\[ \\] \\( \\) \\# \\+ \\- \\. \\! 转义字符包括：\\ ` * _ { } [ ] ( ) # + - . ! 引用> 单行引用 单行引用 > 多行引用 > > 如果引用内容需要换行，可以在行尾添加两个空格或空行 多行引用 如果引用内容需要换行，可以在行尾添加两个空格或空行 > 引用 >> 嵌套的引用 引用 嵌套的引用 分隔线*** ------ ___ * * * - - - 图像![QQ](http//qlogo3.store.qq.com/qzone/1637766030/1637766030/100?1641209203 \"QQ\") ![QQ][替代文本] [替代文本]: https://qlogo3.store.qq.com/qzone/1637766030/1637766030/100?1641209203 \"qq\" &lt;img src=\"https://qlogo3.store.qq.com/qzone/1637766030/1637766030/100?1641209203\" width=\"50\" height=\"50\" /> 超链接[家](/) 家 [谷歌](http://www.google.com/) 谷歌 一个超链接：&lt;http://www.google.com/> 一个超链接：http://www.google.com/ 列表1. 有序列表 0. 有序列表 9. 有序列表 - 无序列表 + 无序列表 * 无序列表 1. 嵌套 1 * 1 - 1 * 1 - 2 2. 嵌套 2 1. 2 - 1 2. 2 - 2 有序列表 有序列表 有序列表 无序列表 无序列表 无序列表 嵌套 1 1 - 1 1 - 2 嵌套 2 2 - 1 2 - 2 表格表头1 | 表头2 ----- | ------ 表项1-1 | 表项2-1 表项1-2 | 表项2-2 | 左对齐 | 居中 | 右对齐 | | :------ |:------:| -------:| | 表项1-1 | 表项2-1 | 表项3-1 | | 表项1-2 | 表项2-2 | 表项3-2 | | 表项1-3 | 表项2-3 | 表项3-3 | 表头1 表头2 表项1-1 表项2-1 表项1-2 表项2-2 左对齐 居中 右对齐 表项1-1 表项2-1 google 表项1-2 表项2-2 github 表项1-3 表项2-3 baidu 任务表- [ ] C++ - [x] HTML - [x] CSS - [x] C - [ ] Sleep C++ HTML CSS C Sleep","categories":[{"name":"other","slug":"other","permalink":"https://pomin.xyz/categories/other/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://pomin.xyz/tags/markdown/"}]}],"categories":[{"name":"other","slug":"other","permalink":"https://pomin.xyz/categories/other/"},{"name":"Python","slug":"Python","permalink":"https://pomin.xyz/categories/Python/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://pomin.xyz/categories/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/categories/linux/"},{"name":"Linux","slug":"Linux","permalink":"https://pomin.xyz/categories/Linux/"},{"name":"CMake","slug":"CMake","permalink":"https://pomin.xyz/categories/CMake/"},{"name":"批处理脚本","slug":"批处理脚本","permalink":"https://pomin.xyz/categories/%E6%89%B9%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/"},{"name":"server","slug":"linux/server","permalink":"https://pomin.xyz/categories/linux/server/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://pomin.xyz/tags/markdown/"},{"name":"串口工具","slug":"串口工具","permalink":"https://pomin.xyz/tags/%E4%B8%B2%E5%8F%A3%E5%B7%A5%E5%85%B7/"},{"name":"正则表达式","slug":"正则表达式","permalink":"https://pomin.xyz/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"},{"name":"linux","slug":"linux","permalink":"https://pomin.xyz/tags/linux/"},{"name":"Python","slug":"Python","permalink":"https://pomin.xyz/tags/Python/"},{"name":"WSL","slug":"WSL","permalink":"https://pomin.xyz/tags/WSL/"},{"name":"CMake","slug":"CMake","permalink":"https://pomin.xyz/tags/CMake/"},{"name":"批处理脚本","slug":"批处理脚本","permalink":"https://pomin.xyz/tags/%E6%89%B9%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/"},{"name":"linux常见问题","slug":"linux常见问题","permalink":"https://pomin.xyz/tags/linux%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"name":"MQTT","slug":"MQTT","permalink":"https://pomin.xyz/tags/MQTT/"},{"name":"server","slug":"server","permalink":"https://pomin.xyz/tags/server/"}]}