<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>快速搭建一个 MQTT 服务器</title>
      <link href="2022/01/26/mqtt-server/"/>
      <url>2022/01/26/mqtt-server/</url>
      
        <content type="html"><![CDATA[<h2 id="OS版本"><a href="#OS版本" class="headerlink" title="OS版本"></a>OS版本</h2><p><img src="/images/mqtt-server/os.jpg" alt="OS版本"></p><ul><li><p>安装 emqx</p></li><li><p>配置开放端口 (1883 8083 8084 18083)</p></li><li><p>启动 emqx</p></li><li><p>使用 emqx 自带的 Websocket 测试</p></li><li><p>申请域名和 ssl 证书、设置域名解析</p></li><li><p>配置 ssl 证书到emqx，配置 wss</p></li></ul><h2 id="安装-emqx"><a href="#安装-emqx" class="headerlink" title="安装 emqx"></a>安装 emqx</h2><p><a href="https://www.emqx.com/zh/products/emqx">https://www.emqx.com/zh/products/emqx</a></p><p>sh 脚本安装，不赘述</p><h2 id="配置开放端口-1883-8083-8084-18083"><a href="#配置开放端口-1883-8083-8084-18083" class="headerlink" title="配置开放端口 (1883 8083 8084 18083)"></a>配置开放端口 (1883 8083 8084 18083)</h2><ul><li><p>配置 腾讯云、阿里云等安全策略来开放端口</p></li><li><p>如果安装了宝塔面板或服务器规则，要设置端口的放行</p></li></ul><p><img src="/images/mqtt-server/port.jpg" alt="开放端口"></p><h2 id="启动-emqx"><a href="#启动-emqx" class="headerlink" title="启动 emqx"></a>启动 emqx</h2><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo emqx start<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="使用-emqx-自带的-Websocket-测试"><a href="#使用-emqx-自带的-Websocket-测试" class="headerlink" title="使用 emqx 自带的 Websocket 测试"></a>使用 emqx 自带的 Websocket 测试</h2><p><img src="/images/mqtt-server/websocket.jpg" alt="测试"></p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p><img src="/images/mqtt-server/message.jpg" alt="客户端"></p><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><p><img src="/images/mqtt-server/message-1.jpg" alt="服务器端"></p><h2 id="申请域名和-ssl-证书"><a href="#申请域名和-ssl-证书" class="headerlink" title="申请域名和 ssl 证书"></a>申请域名和 ssl 证书</h2><h3 id="万网申请域名"><a href="#万网申请域名" class="headerlink" title="万网申请域名"></a>万网申请域名</h3><p><a href="https://wanwang.aliyun.com/">https://wanwang.aliyun.com/</a></p><p><img src="/images/mqtt-server/site.jpg" alt="解析"></p><h3 id="配置-ssl-证书，下载证书到本地"><a href="#配置-ssl-证书，下载证书到本地" class="headerlink" title="配置 ssl 证书，下载证书到本地"></a>配置 ssl 证书，下载证书到本地</h3><p><img src="/images/mqtt-server/ssl.jpg" alt="ssl"></p><h2 id="配置-ssl-证书到emqx，配置-wss"><a href="#配置-ssl-证书到emqx，配置-wss" class="headerlink" title="配置 ssl 证书到emqx，配置 wss"></a>配置 ssl 证书到emqx，配置 wss</h2><h3 id="上传证书到服务器"><a href="#上传证书到服务器" class="headerlink" title="上传证书到服务器"></a>上传证书到服务器</h3><p><img src="/images/mqtt-server/upload.jpg" alt="解析"></p><h3 id="改写配置文件"><a href="#改写配置文件" class="headerlink" title="改写配置文件"></a>改写配置文件</h3><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo nano &#x2F;etc&#x2F;emqx&#x2F;emqx.conf# Ctrl+W 搜索 key.pem、cert.pem 改成 **.key、**.pem# **.key 和 **.pem 是下载下来的 ssl 证书中的两个文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/images/mqtt-server/config.jpg" alt="解析"></p><h3 id="测试-wss-连接"><a href="#测试-wss-连接" class="headerlink" title="测试 wss 连接"></a>测试 wss 连接</h3><p><img src="/images/mqtt-server/ok-mqtt.jpg" alt="wss"></p>]]></content>
      
      
      
        <tags>
            
            <tag> MQTT </tag>
            
            <tag> server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL 环境编译运行 ESP8266 RTOS SDK</title>
      <link href="2022/01/26/esp8266/"/>
      <url>2022/01/26/esp8266/</url>
      
        <content type="html"><![CDATA[<h2 id="安装、配置-wsl-我使用的是-Debian"><a href="#安装、配置-wsl-我使用的是-Debian" class="headerlink" title="安装、配置 wsl (我使用的是 Debian)"></a>安装、配置 wsl (我使用的是 Debian)</h2><ul><li><p>安装 wsl<br><img src="/images/esp8266-wsl/Debian.jpg" alt="Debian"></p></li><li><p>查看系统版本</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat &#x2F;etc&#x2F;os-release<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/esp8266-wsl/os_ver.jpg" alt="系统版本"></p></li><li><p>切换软件安装源 (这里使用清华镜像)<br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/debian/">https://mirrors.tuna.tsinghua.edu.cn/help/debian/</a><br><img src="/images/esp8266-wsl/source.jpg" alt="镜像源"></p></li><li><p>编辑 source.list</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo nano &#x2F;etc&#x2F;apt&#x2F;sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/esp8266-wsl/source-1.jpg"></p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye main contrib non-free# deb-src http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye main contrib non-freedeb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-updates main contrib non-free# deb-src http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-updates main contrib non-freedeb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-backports main contrib non-free# deb-src http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian&#x2F; bullseye-backports main contrib non-freedeb http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security bullseye-security main contrib non-free# deb-src http:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;debian-security bullseye-security main contrib non-free<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><hr><h2 id="开始搭建-ESP8266-开发环境"><a href="#开始搭建-ESP8266-开发环境" class="headerlink" title="开始搭建 ESP8266 开发环境"></a>开始搭建 ESP8266 开发环境</h2><hr><ul><li>安装常用软件<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">sudo apt-get install gcc git wget make libncurses-dev flex bison gperf python python-serial<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>报错<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">Note, selecting &#39;python-is-python2&#39; instead of &#39;python&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>暂时不管，这里切忌安装 python3，SDK 的构建工具是基于 python2 的！！</li><li>这个版本的 python 没有自带 pip，这里手动安装一下<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 安装 python2 的 pipwget --no-check-certificate https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;ez_setup.pysudo python ez_setup.py --insecurewget https:&#x2F;&#x2F;pypi.python.org&#x2F;packages&#x2F;11&#x2F;b6&#x2F;abcb525026a4be042b486df43905d6893fb04f05aac21c32c638e939e447&#x2F;pip-9.0.1.tar.gz#md5&#x3D;35f01da33009719497f01a4ba69d63c9# 这里的 * 是通配符tar -xvf *.tar.gzcd pip*# 安装sudo python setup.py installln -s &#x2F;usr&#x2F;local&#x2F;python27&#x2F;bin&#x2F;pip &#x2F;usr&#x2F;bin&#x2F;pip<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>尝试运行 pip –version 失败，原来是没有包含 pip 安装到的路径<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>安装完 pip 先更新一下<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">pip install --upgrade pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>下载交叉编译工具 (放在到实体机，因为怕哪天wsl崩了，代码无了)</li></ul><p><a href="https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/get-started/linux-setup.html">https://docs.espressif.com/projects/esp8266-rtos-sdk/en/latest/get-started/linux-setup.html</a></p><ul><li>下载 SDK (也放在实体机，时间比较长)<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git clone --recursive https:&#x2F;&#x2F;github.com&#x2F;espressif&#x2F;ESP8266_RTOS_SDK.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li>git clone 有问题<blockquote><p>由于 github 自 2021年8月 加强了安全的啥啥啥策略，不能随便 clone 了</p></blockquote></li><li>这里配置一下 github 的个人信息<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">git config --global user.name  &quot;名字&quot;git config --global user.email &quot;邮箱&quot;# 看一下配置信息git config -l<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li>接着愉快的 clone</li><li>下载完是这个样子滴…<br>![下载目录]](/images/esp8266-wsl/folder.jpg)</li><li>在 wsl 中进入 SDK 的目录中安装一下 python 的依赖工具<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 安装依赖python -m pip install --user -r .&#x2F;requirements.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>包含路径<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"># 我下载的 SDK 目录和交叉编译工具目录 (在实体机里)# wsl 下的 &#x2F;mnt&#x2F;f&#x2F;... 就是 Windows 中的 F:&#x2F;...# 执行下面两行export IDF_PATH&#x3D;&quot;&#x2F;mnt&#x2F;f&#x2F;MyEnv&#x2F;ESP8266&#x2F;ESP8266_RTOS_SDK&quot;export PATH&#x3D;$PATH:&#x2F;mnt&#x2F;f&#x2F;MyEnv&#x2F;ESP8266&#x2F;xtensa-lx106-elf&#x2F;bin# 有些教程是把 SDK 安装到了 ~&#x2F;esp8266 目录# export IDF_PATH&#x3D;&quot;$HOME&#x2F;esp8266&#x2F;ESP8266_RTOS_SDK&quot;# export PATH&#x3D;$PATH:$HOME&#x2F;esp8266&#x2F;xtensa-lx106-elf&#x2F;bin# pipexport PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;bin# 添加 export和 path 到 shell 的环境中# IDF_PATH 添加到 ~&#x2F;.bashrc 或 ~&#x2F;.zshrc (zsh yyds !!)中export IDF_PATH&#x3D;&quot;&#x2F;mnt&#x2F;f&#x2F;MyEnv&#x2F;ESP8266&#x2F;ESP8266_RTOS_SDK&quot;# PATH 添加到 Windows 实体机环境变量中 (用户变量只需注销)export PATH&#x3D;$PATH:&#x2F;mnt&#x2F;f&#x2F;MyEnv&#x2F;ESP8266&#x2F;xtensa-lx106-elf&#x2F;bin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>Windows 实体机环境变量</li></ul><p><img src="/images/esp8266-wsl/path.jpg" alt="环境变量"></p><ul><li><p>进入 SDK 的例程中编译一下试试</p></li><li><p>配置串口</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cd $IDF_PATH&#x2F;examples&#x2F;get-started&#x2F;hello_worldmake menuconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>打开配置界面，需要控制台足够的大！！不然不运行</p></blockquote></li><li><p>配置一下串口和波特率 (越高烧录越快)<br><img src="/images/esp8266-wsl/com.jpg" alt="串口号"></p></li><li><p>我电脑的串口号是 COM27，所以 wsl 配置中串口就是 /dev/ttyS27，波特率设置成 921600，因为快！！<br><img src="/images/esp8266-wsl/menu.jpg" alt="菜单"></p></li><li><p>编译一下</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">make -j8 all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>编译成功后烧录</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">make flash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/images/esp8266-wsl/flash.jpg" alt="烧录"></p></li></ul><hr><h2 id="编译环境搭建完成，简单折腾折腾"><a href="#编译环境搭建完成，简单折腾折腾" class="headerlink" title="编译环境搭建完成，简单折腾折腾"></a>编译环境搭建完成，简单折腾折腾</h2><hr><ul><li><p>为了实现随时随地的编译某个工程 (就是带有sdkconfig文件的那些文件夹)写一个powershell的脚本来帮助编译</p><ul><li>pwd_build.ps1<pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell"><span class="token comment"># 取绝对路径父路径</span><span class="token variable">$path_abs</span> = <span class="token function">Split-Path</span> <span class="token operator">-</span>Parent <span class="token variable">$MyInvocation</span><span class="token punctuation">.</span>MyCommand<span class="token punctuation">.</span>Definition<span class="token comment"># 整理路径</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"\\"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"C:"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"D:"</span><span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"E:"</span><span class="token punctuation">,</span> <span class="token string">"e"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"F:"</span><span class="token punctuation">,</span> <span class="token string">"f"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"G:"</span><span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"H:"</span><span class="token punctuation">,</span> <span class="token string">"h"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"I:"</span><span class="token punctuation">,</span> <span class="token string">"i"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"J:"</span><span class="token punctuation">,</span> <span class="token string">"j"</span><span class="token variable">$path_abs</span> = <span class="token variable">$path_abs</span> <span class="token operator">-replace</span> <span class="token string">"K:"</span><span class="token punctuation">,</span> <span class="token string">"k"</span><span class="token variable">$path_abs</span> = <span class="token string">"/mnt/"</span> <span class="token operator">+</span> <span class="token variable">$path_abs</span><span class="token comment"># 在当前工作目录下运行绝对路径中的 build.sh</span>wsl <span class="token string">"<span class="token variable">$path_abs</span>/build.sh"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>build.sh<pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">export IDF_PATH&#x3D;&quot;&#x2F;mnt&#x2F;f&#x2F;MyEnv&#x2F;ESP8266&#x2F;ESP8266_RTOS_SDK&quot;export PATH&#x3D;$PATH:&#x2F;mnt&#x2F;f&#x2F;MyEnv&#x2F;ESP8266&#x2F;xtensa-lx106-elf&#x2F;bin# make menuconfigmake -j8 allmake flash<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>把两个文件放在一起 (可以放在某个环境变量里打开powershell随处调用)<br><img src="/images/esp8266-wsl/build.jpg" alt="编译"></p></li><li><p>运行一下试试看</p></li><li><p>make menuconfig 正常<br><img src="/images/esp8266-wsl/ps-1.jpg" alt="菜单"></p></li><li><p>make flash 正常<br><img src="/images/esp8266-wsl/ps-2.jpg" alt="烧录"></p></li><li><p>这样就可以愉快的用VSCode写代码，用这个脚本编译了</p></li><li><p>配置一下 VSCode 的 tasks.json<br><img src="/images/esp8266-wsl/code.png" alt="vscode配置"></p></li><li><p>settings.json 中设置 powershell 为默认终端</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token property">"terminal.integrated.shell.windows"</span><span class="token operator">:</span> <span class="token string">"C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>Ctrl+Shift+B 运行编译任务<br><img src="/images/esp8266-wsl/vscode.jpg" alt="编译运行"></p></li><li><p>编译正常，可以愉快的写代码了</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> ESP8266 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
